SELECT * FROM datawithbaraa_guided.`gold.dim_customers`;
SELECT * FROM datawithbaraa_guided.`gold.dim_products`;
SELECT * FROM datawithbaraa_guided.`gold.fact_sales`;

------------------------------------------------------------------------------------------------------------

-- Explore all countries our customers come from

SELECT DISTINCT country
FROM `gold.dim_customers`;


-- Explore product categories and subcategories

SELECT  COUNT(DISTINCT(category)), COUNT(DISTINCT(subcategory)), COUNT(product_name)
FROM datawithbaraa_guided.`gold.dim_products`;

SELECT category, COUNT(*) AS Number_of_products
FROM datawithbaraa_guided.`gold.dim_products`
GROUP BY category;

SELECT DISTINCT category, subcategory 
FROM datawithbaraa_guided.`gold.dim_products`
ORDER BY 1;



-- Date of our first and last order
SELECT MIN(order_date), MAX(order_date)
FROM datawithbaraa_guided.`gold.fact_sales`
WHERE order_date !=0 ;



-- Age group of our customers 
-- Youngest & Oldest customer
SELECT MAX(birthdate) AS Youngest_birthdate,  MIN(birthdate) AS Oldest_birthdate,
TIMESTAMPDIFF( YEAR, MAX(birthdate), CURDATE()) AS Min_age,
TIMESTAMPDIFF( YEAR, MIN(birthdate), CURDATE()) AS Max_age
FROM `gold.dim_customers`
WHERE birthdate!=0 ;


-- TOTAL SALES
SELECT SUM(SALES_AMOUNT)
FROM `GOLD.FACT_SALES`;

-- TOTAL ITEMS SOLD
SELECT SUM(quantity)
FROM `gold.fact_sales`;


-- Average cost of products category-wise
SELECT  category,  AVG(cost)
FROM `gold.dim_products`
GROUP BY category;

-- Average selling price
SELECT AVG(price)
FROM `gold.fact_sales`;

-- Total number of orders
SELECT COUNT(DISTINCT(order_number)) FROM  `gold.fact_sales`;

-- Total number of products
SELECT COUNT(product_name) FROM  `gold.dim_products`;
SELECT COUNT(DISTINCT  product_name) FROM  `gold.dim_products`;

-- Total Customers
SELECT COUNT(customer_id) FROM `gold.dim_customers`;

------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------

-- Key metrics-

SELECT 'Total sales' AS `Name`, SUM(sales_amount) AS `value` FROM `gold.fact_sales`
UNION ALL
SELECT 'Total quantity',SUM(quantity)
FROM `gold.fact_sales`
UNION ALL
SELECT 'Average price', AVG(price)
FROM `gold.fact_sales`
UNION ALL
SELECT 'Total orders', COUNT(order_number) FROM  `gold.fact_sales`
UNION ALL
SELECT 'Total products', COUNT(product_name) FROM  `gold.dim_products`
UNION ALL
SELECT 'Total number of customers', COUNT(customer_id) FROM `gold.dim_customers`;

------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------

-- Total customers country-wise

SELECT country, COUNT(customer_id) AS 'Total customers' 
FROM `gold.dim_customers`
GROUP BY country
ORDER BY COUNT(customer_id) DESC;


-- Total customers by Gender

SELECT gender, COUNT(customer_id) AS 'Total customers' 
FROM `gold.dim_customers`
GROUP BY gender
ORDER BY COUNT(customer_id) DESC;


-- Total sales in each category

SELECT p.category,
SUM(s.sales_amount) AS 'Total sales'
FROM `gold.fact_sales` s
LEFT JOIN `gold.dim_products` p
ON p.product_key= s.product_key
GROUP  BY p.category
ORDER BY SUM(s.sales_amount) DESC;


-- Total revenue generated by each customer

SELECT c.customer_key,
c.first_name, c.last_name,
SUM(s.sales_amount) AS 'Total sales'
FROM `gold.fact_sales` s
LEFT JOIN `gold.dim_customers` c
ON s.customer_key= c.customer_key
GROUP  BY c.customer_key,
c.first_name, c.last_name
ORDER BY SUM(s.sales_amount) DESC;


-- Total items sold in each country

SELECT c.country,
SUM(s.quantity) AS 'Total sold_items'
FROM `gold.fact_sales` s
LEFT JOIN `gold.dim_customers` c
ON s.customer_key= c.customer_key
GROUP  BY c.country
ORDER BY SUM(s.quantity) DESC;

------------------------------------------------------------------------------------------------------------

-- Top 5 products in terms of sales
SELECT * FROM
	(SELECT p.product_name,
    SUM(s.sales_amount) AS 'Total sales',
    ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) desc) as ranks
    FROM `gold.fact_sales` s
	LEFT JOIN `gold.dim_products` p
	ON p.product_key= s.product_key
	GROUP BY p.product_name) AS top
WHERE ranks <6;


-- 5 worst products in terms of sales
SELECT * FROM
	(SELECT p.product_name,
    SUM(s.sales_amount) AS 'Total sales',
    ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount)) as ranks
    FROM `gold.fact_sales` s
	LEFT JOIN `gold.dim_products` p
	ON p.product_key= s.product_key
	GROUP BY p.product_name) AS top
WHERE ranks <6;

------------------------------------------------------------------------------------------------------------

-- Top 5 subcategory in terms of sales
SELECT * FROM
	(SELECT p.subcategory,
    SUM(s.sales_amount) AS 'Total sales',
    ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount) desc) as ranks
    FROM `gold.fact_sales` s
	LEFT JOIN `gold.dim_products` p
	ON p.product_key= s.product_key
	GROUP BY p.subcategory) AS top
WHERE ranks <6;


-- 5 worst subcategory in terms of sales
SELECT * FROM
	(SELECT p.subcategory,
    SUM(s.sales_amount) AS 'Total sales',
    ROW_NUMBER() OVER (ORDER BY SUM(s.sales_amount)) as ranks
    FROM `gold.fact_sales` s
	LEFT JOIN `gold.dim_products` p
	ON p.product_key= s.product_key
	GROUP BY p.subcategory) AS top
WHERE ranks <6;
